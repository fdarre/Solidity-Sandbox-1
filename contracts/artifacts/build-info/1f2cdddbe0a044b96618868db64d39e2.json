{
	"id": "1f2cdddbe0a044b96618868db64d39e2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Will.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract Will \r\n{\r\n    address owner;\r\n    uint fortune;\r\n    bool isDeceased;\r\n    address payable[] familyWallets;\r\n    mapping(address => uint) inheritance;\r\n\r\n    constructor() payable \r\n    {\r\n        owner = msg.sender; // address that is being called\r\n        fortune = msg.value; // tells us how much is being sent\r\n        isDeceased = false;\r\n    }\r\n    \r\n    function addHeir(address payable heirWallet, uint inheritanceAmount) public\r\n    {\r\n        familyWallets.push(heirWallet); //add wallets to the family wallets\r\n        inheritance[heirWallet] = inheritanceAmount; //add the inheritance amount for the wallet\r\n    }\r\n\r\n    function payout() private mustBeDeceased\r\n    { \r\n         // pay each family member based on their wallet address\r\n        for(uint i = 0; i < familyWallets.length; i++)\r\n        {\r\n            familyWallets[i].transfer(inheritance[familyWallets[i]]);                \r\n        }\r\n    }\r\n\r\n    //Oracle switch simulation\r\n    function hasDeceased() public onlyOwner \r\n    {\r\n        isDeceased = true;\r\n        payout();\r\n    }\r\n\r\n    //only allocate funds if grandpa is deceased\r\n    modifier mustBeDeceased {\r\n        require(isDeceased == true);\r\n        _;\r\n    }\r\n\r\n    //only person who can call the contract is the owner \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    //000000000000000000\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/1_Will.sol": {
				"Will": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "heirWallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "inheritanceAmount",
									"type": "uint256"
								}
							],
							"name": "addHeir",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasDeceased",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_Will.sol\":74:1461  contract Will \r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/1_Will.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/1_Will.sol\":280:285  owner */\n  0x00\n  dup1\n    /* \"contracts/1_Will.sol\":280:298  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_Will.sol\":351:360  msg.value */\n  callvalue\n    /* \"contracts/1_Will.sol\":341:348  fortune */\n  0x01\n    /* \"contracts/1_Will.sol\":341:360  fortune = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_Will.sol\":419:424  false */\n  0x00\n    /* \"contracts/1_Will.sol\":406:416  isDeceased */\n  0x02\n  0x00\n    /* \"contracts/1_Will.sol\":406:424  isDeceased = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_Will.sol\":74:1461  contract Will \r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_Will.sol\":74:1461  contract Will \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9cdd47f2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xeddcca99\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1_Will.sol\":444:708  function addHeir(address payable heirWallet, uint inheritanceAmount) public\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/1_Will.sol\":1042:1143  function hasDeceased() public onlyOwner \r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/1_Will.sol\":444:708  function addHeir(address payable heirWallet, uint inheritanceAmount) public\r... */\n    tag_8:\n        /* \"contracts/1_Will.sol\":536:549  familyWallets */\n      0x03\n        /* \"contracts/1_Will.sol\":555:565  heirWallet */\n      dup3\n        /* \"contracts/1_Will.sol\":536:566  familyWallets.push(heirWallet) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Will.sol\":639:656  inheritanceAmount */\n      dup1\n        /* \"contracts/1_Will.sol\":613:624  inheritance */\n      0x04\n        /* \"contracts/1_Will.sol\":613:636  inheritance[heirWallet] */\n      0x00\n        /* \"contracts/1_Will.sol\":625:635  heirWallet */\n      dup5\n        /* \"contracts/1_Will.sol\":613:636  inheritance[heirWallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_Will.sol\":613:656  inheritance[heirWallet] = inheritanceAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Will.sol\":444:708  function addHeir(address payable heirWallet, uint inheritanceAmount) public\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Will.sol\":1042:1143  function hasDeceased() public onlyOwner \r... */\n    tag_10:\n        /* \"contracts/1_Will.sol\":1402:1407  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Will.sol\":1388:1407  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Will.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/1_Will.sol\":1388:1407  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/1_Will.sol\":1380:1408  require(msg.sender == owner) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"contracts/1_Will.sol\":1112:1116  true */\n      0x01\n        /* \"contracts/1_Will.sol\":1099:1109  isDeceased */\n      0x02\n      0x00\n        /* \"contracts/1_Will.sol\":1099:1116  isDeceased = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Will.sol\":1127:1135  payout() */\n      tag_16\n        /* \"contracts/1_Will.sol\":1127:1133  payout */\n      tag_17\n        /* \"contracts/1_Will.sol\":1127:1135  payout() */\n      jump\t// in\n    tag_16:\n        /* \"contracts/1_Will.sol\":1042:1143  function hasDeceased() public onlyOwner \r... */\n      jump\t// out\n        /* \"contracts/1_Will.sol\":716:1002  function payout() private mustBeDeceased\r... */\n    tag_17:\n        /* \"contracts/1_Will.sol\":1258:1262  true */\n      0x01\n        /* \"contracts/1_Will.sol\":1244:1262  isDeceased == true */\n      iszero\n      iszero\n        /* \"contracts/1_Will.sol\":1244:1254  isDeceased */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_Will.sol\":1244:1262  isDeceased == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/1_Will.sol\":1236:1263  require(isDeceased == true) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/1_Will.sol\":844:850  uint i */\n      0x00\n        /* \"contracts/1_Will.sol\":840:995  for(uint i = 0; i < familyWallets.length; i++)\r... */\n    tag_21:\n        /* \"contracts/1_Will.sol\":860:873  familyWallets */\n      0x03\n        /* \"contracts/1_Will.sol\":860:880  familyWallets.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/1_Will.sol\":856:857  i */\n      dup2\n        /* \"contracts/1_Will.sol\":856:880  i < familyWallets.length */\n      lt\n        /* \"contracts/1_Will.sol\":840:995  for(uint i = 0; i < familyWallets.length; i++)\r... */\n      iszero\n      tag_22\n      jumpi\n        /* \"contracts/1_Will.sol\":911:924  familyWallets */\n      0x03\n        /* \"contracts/1_Will.sol\":925:926  i */\n      dup2\n        /* \"contracts/1_Will.sol\":911:927  familyWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Will.sol\":911:936  familyWallets[i].transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Will.sol\":911:967  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      0x08fc\n        /* \"contracts/1_Will.sol\":937:948  inheritance */\n      0x04\n        /* \"contracts/1_Will.sol\":937:966  inheritance[familyWallets[i]] */\n      0x00\n        /* \"contracts/1_Will.sol\":949:962  familyWallets */\n      0x03\n        /* \"contracts/1_Will.sol\":963:964  i */\n      dup6\n        /* \"contracts/1_Will.sol\":949:965  familyWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_28\n      jumpi\n      tag_29\n      tag_26\n      jump\t// in\n    tag_29:\n    tag_28:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Will.sol\":937:966  inheritance[familyWallets[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1_Will.sol\":911:967  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n        /* \"contracts/1_Will.sol\":882:885  i++ */\n      dup1\n      dup1\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap2\n      pop\n      pop\n        /* \"contracts/1_Will.sol\":840:995  for(uint i = 0; i < familyWallets.length; i++)\r... */\n      jump(tag_21)\n    tag_22:\n      pop\n        /* \"contracts/1_Will.sol\":716:1002  function payout() private mustBeDeceased\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_36:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_38\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":7:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:307   */\n    tag_40:\n        /* \"#utility.yul\":214:219   */\n      0x00\n        /* \"#utility.yul\":252:258   */\n      dup2\n        /* \"#utility.yul\":239:259   */\n      calldataload\n        /* \"#utility.yul\":230:259   */\n      swap1\n      pop\n        /* \"#utility.yul\":268:301   */\n      tag_42\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":268:301   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":168:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:803   */\n    tag_7:\n        /* \"#utility.yul\":389:395   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup1\n        /* \"#utility.yul\":446:448   */\n      0x40\n        /* \"#utility.yul\":434:443   */\n      dup4\n        /* \"#utility.yul\":425:432   */\n      dup6\n        /* \"#utility.yul\":421:444   */\n      sub\n        /* \"#utility.yul\":417:449   */\n      slt\n        /* \"#utility.yul\":414:533   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":452:531   */\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":414:533   */\n    tag_45:\n        /* \"#utility.yul\":572:573   */\n      0x00\n        /* \"#utility.yul\":597:658   */\n      tag_48\n        /* \"#utility.yul\":650:657   */\n      dup6\n        /* \"#utility.yul\":641:647   */\n      dup3\n        /* \"#utility.yul\":630:639   */\n      dup7\n        /* \"#utility.yul\":626:648   */\n      add\n        /* \"#utility.yul\":597:658   */\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":587:658   */\n      swap3\n      pop\n        /* \"#utility.yul\":543:668   */\n      pop\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":733:786   */\n      tag_49\n        /* \"#utility.yul\":778:785   */\n      dup6\n        /* \"#utility.yul\":769:775   */\n      dup3\n        /* \"#utility.yul\":758:767   */\n      dup7\n        /* \"#utility.yul\":754:776   */\n      add\n        /* \"#utility.yul\":733:786   */\n      tag_40\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":723:786   */\n      swap2\n      pop\n        /* \"#utility.yul\":678:796   */\n      pop\n        /* \"#utility.yul\":313:803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:994   */\n    tag_52:\n        /* \"#utility.yul\":935:942   */\n      0x00\n        /* \"#utility.yul\":964:988   */\n      tag_54\n        /* \"#utility.yul\":982:987   */\n      dup3\n        /* \"#utility.yul\":964:988   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":953:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":890:994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1126   */\n    tag_55:\n        /* \"#utility.yul\":1037:1044   */\n      0x00\n        /* \"#utility.yul\":1077:1119   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1070:1075   */\n      dup3\n        /* \"#utility.yul\":1066:1120   */\n      and\n        /* \"#utility.yul\":1055:1120   */\n      swap1\n      pop\n        /* \"#utility.yul\":1000:1126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1209   */\n    tag_57:\n        /* \"#utility.yul\":1169:1176   */\n      0x00\n        /* \"#utility.yul\":1198:1203   */\n      dup2\n        /* \"#utility.yul\":1187:1203   */\n      swap1\n      pop\n        /* \"#utility.yul\":1132:1209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1215:1448   */\n    tag_34:\n        /* \"#utility.yul\":1254:1257   */\n      0x00\n        /* \"#utility.yul\":1277:1301   */\n      tag_60\n        /* \"#utility.yul\":1295:1300   */\n      dup3\n        /* \"#utility.yul\":1277:1301   */\n      tag_57\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1268:1301   */\n      swap2\n      pop\n        /* \"#utility.yul\":1323:1389   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1316:1321   */\n      dup3\n        /* \"#utility.yul\":1313:1390   */\n      eq\n        /* \"#utility.yul\":1310:1413   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1393:1411   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1310:1413   */\n    tag_61:\n        /* \"#utility.yul\":1440:1441   */\n      0x01\n        /* \"#utility.yul\":1433:1438   */\n      dup3\n        /* \"#utility.yul\":1429:1442   */\n      add\n        /* \"#utility.yul\":1422:1442   */\n      swap1\n      pop\n        /* \"#utility.yul\":1215:1448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1454:1634   */\n    tag_63:\n        /* \"#utility.yul\":1502:1579   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1499:1500   */\n      0x00\n        /* \"#utility.yul\":1492:1580   */\n      mstore\n        /* \"#utility.yul\":1599:1603   */\n      0x11\n        /* \"#utility.yul\":1596:1597   */\n      0x04\n        /* \"#utility.yul\":1589:1604   */\n      mstore\n        /* \"#utility.yul\":1623:1627   */\n      0x24\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1613:1628   */\n      revert\n        /* \"#utility.yul\":1640:1820   */\n    tag_26:\n        /* \"#utility.yul\":1688:1765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1685:1686   */\n      0x00\n        /* \"#utility.yul\":1678:1766   */\n      mstore\n        /* \"#utility.yul\":1785:1789   */\n      0x32\n        /* \"#utility.yul\":1782:1783   */\n      0x04\n        /* \"#utility.yul\":1775:1790   */\n      mstore\n        /* \"#utility.yul\":1809:1813   */\n      0x24\n        /* \"#utility.yul\":1806:1807   */\n      0x00\n        /* \"#utility.yul\":1799:1814   */\n      revert\n        /* \"#utility.yul\":1949:2066   */\n    tag_47:\n        /* \"#utility.yul\":2058:2059   */\n      0x00\n        /* \"#utility.yul\":2055:2056   */\n      dup1\n        /* \"#utility.yul\":2048:2060   */\n      revert\n        /* \"#utility.yul\":2072:2210   */\n    tag_39:\n        /* \"#utility.yul\":2153:2185   */\n      tag_70\n        /* \"#utility.yul\":2179:2184   */\n      dup2\n        /* \"#utility.yul\":2153:2185   */\n      tag_52\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2146:2151   */\n      dup2\n        /* \"#utility.yul\":2143:2186   */\n      eq\n        /* \"#utility.yul\":2133:2204   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2197:2198   */\n      dup1\n        /* \"#utility.yul\":2190:2202   */\n      revert\n        /* \"#utility.yul\":2133:2204   */\n    tag_71:\n        /* \"#utility.yul\":2072:2210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2216:2338   */\n    tag_43:\n        /* \"#utility.yul\":2289:2313   */\n      tag_73\n        /* \"#utility.yul\":2307:2312   */\n      dup2\n        /* \"#utility.yul\":2289:2313   */\n      tag_57\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2282:2287   */\n      dup2\n        /* \"#utility.yul\":2279:2314   */\n      eq\n        /* \"#utility.yul\":2269:2332   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2325:2326   */\n      dup1\n        /* \"#utility.yul\":2318:2330   */\n      revert\n        /* \"#utility.yul\":2269:2332   */\n    tag_74:\n        /* \"#utility.yul\":2216:2338   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204af918c10557ff5ed7af67ca6dcdf854f4c2241aa23c15562188fa89010bc9ff64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600260006101000a81548160ff021916908315150217905550610487806100756000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639cdd47f21461003b578063eddcca9914610057575b600080fd5b610055600480360381019061005091906102fb565b610061565b005b61005f61010c565b005b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016457600080fd5b6001600260006101000a81548160ff021916908315150217905550610187610189565b565b60011515600260009054906101000a900460ff161515146101a957600080fd5b60005b6003805490508110156102ce57600381815481106101cd576101cc6103ef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004600060038581548110610229576102286103ef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156102ba573d6000803e3d6000fd5b5080806102c690610377565b9150506101ac565b50565b6000813590506102e081610423565b92915050565b6000813590506102f58161043a565b92915050565b600080604083850312156103125761031161041e565b5b6000610320858286016102d1565b9250506020610331858286016102e6565b9150509250929050565b60006103468261034d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103828261036d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156103b5576103b46103c0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b61042c8161033b565b811461043757600080fd5b50565b6104438161036d565b811461044e57600080fd5b5056fea26469706673582212204af918c10557ff5ed7af67ca6dcdf854f4c2241aa23c15562188fa89010bc9ff64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x487 DUP1 PUSH2 0x75 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CDD47F2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEDDCCA99 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x10C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x187 PUSH2 0x189 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x3EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x229 JUMPI PUSH2 0x228 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 DUP1 PUSH2 0x2C6 SWAP1 PUSH2 0x377 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E0 DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F5 DUP2 PUSH2 0x43A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x320 DUP6 DUP3 DUP7 ADD PUSH2 0x2D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x331 DUP6 DUP3 DUP7 ADD PUSH2 0x2E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 DUP3 PUSH2 0x34D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 DUP3 PUSH2 0x36D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x3C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42C DUP2 PUSH2 0x33B JUMP JUMPDEST DUP2 EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x443 DUP2 PUSH2 0x36D JUMP JUMPDEST DUP2 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xF9 XOR 0xC1 SDIV JUMPI SELFDESTRUCT 0x5E 0xD7 0xAF PUSH8 0xCA6DCDF854F4C224 BYTE LOG2 EXTCODECOPY ISZERO JUMP 0x21 DUP9 STATICCALL DUP10 ADD SIGNEXTEND 0xC9 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "74:1387:0:-:0;;;288:10;280:5;;:18;;;;;;;;;;;;;;;;;;351:9;341:7;:19;;;;419:5;406:10;;:18;;;;;;;;;;;;;;;;;;74:1387;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addHeir_52": {
									"entryPoint": 97,
									"id": 52,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasDeceased_95": {
									"entryPoint": 268,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@payout_82": {
									"entryPoint": 393,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2341:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "230:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "239:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "230:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "268:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "268:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "214:5:1",
														"type": ""
													}
												],
												"src": "168:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:399:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "452:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:32:1"
															},
															"nodeType": "YulIf",
															"src": "414:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "543:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "558:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "587:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "630:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "641:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "626:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "626:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "650:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "597:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "587:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "678:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "693:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "697:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "723:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "758:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "778:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "733:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "723:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "397:6:1",
														"type": ""
													}
												],
												"src": "313:490:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "859:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "875:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "869:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "842:6:1",
														"type": ""
													}
												],
												"src": "809:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "953:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "982:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "964:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "953:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "925:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "935:7:1",
														"type": ""
													}
												],
												"src": "890:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1055:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1070:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1055:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1027:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"src": "1000:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1187:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1198:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1187:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1159:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1169:7:1",
														"type": ""
													}
												],
												"src": "1132:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1258:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1268:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1277:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1268:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1316:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1313:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:77:1"
															},
															"nodeType": "YulIf",
															"src": "1310:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1422:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1433:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1440:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1254:3:1",
														"type": ""
													}
												],
												"src": "1215:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1613:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1454:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1775:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1799:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1640:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1915:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1826:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2055:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2048:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1949:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2123:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2146:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2179:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2153:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2153:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2143:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:51:1"
															},
															"nodeType": "YulIf",
															"src": "2133:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2116:5:1",
														"type": ""
													}
												],
												"src": "2072:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2316:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2325:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2318:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2318:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2282:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2307:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2289:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2279:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2279:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:43:1"
															},
															"nodeType": "YulIf",
															"src": "2269:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:1",
														"type": ""
													}
												],
												"src": "2216:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80639cdd47f21461003b578063eddcca9914610057575b600080fd5b610055600480360381019061005091906102fb565b610061565b005b61005f61010c565b005b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016457600080fd5b6001600260006101000a81548160ff021916908315150217905550610187610189565b565b60011515600260009054906101000a900460ff161515146101a957600080fd5b60005b6003805490508110156102ce57600381815481106101cd576101cc6103ef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004600060038581548110610229576102286103ef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156102ba573d6000803e3d6000fd5b5080806102c690610377565b9150506101ac565b50565b6000813590506102e081610423565b92915050565b6000813590506102f58161043a565b92915050565b600080604083850312156103125761031161041e565b5b6000610320858286016102d1565b9250506020610331858286016102e6565b9150509250929050565b60006103468261034d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103828261036d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156103b5576103b46103c0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b61042c8161033b565b811461043757600080fd5b50565b6104438161036d565b811461044e57600080fd5b5056fea26469706673582212204af918c10557ff5ed7af67ca6dcdf854f4c2241aa23c15562188fa89010bc9ff64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CDD47F2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEDDCCA99 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x10C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x187 PUSH2 0x189 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x3EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x229 JUMPI PUSH2 0x228 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 DUP1 PUSH2 0x2C6 SWAP1 PUSH2 0x377 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E0 DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F5 DUP2 PUSH2 0x43A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x320 DUP6 DUP3 DUP7 ADD PUSH2 0x2D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x331 DUP6 DUP3 DUP7 ADD PUSH2 0x2E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 DUP3 PUSH2 0x34D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 DUP3 PUSH2 0x36D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x3C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42C DUP2 PUSH2 0x33B JUMP JUMPDEST DUP2 EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x443 DUP2 PUSH2 0x36D JUMP JUMPDEST DUP2 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xF9 XOR 0xC1 SDIV JUMPI SELFDESTRUCT 0x5E 0xD7 0xAF PUSH8 0xCA6DCDF854F4C224 BYTE LOG2 EXTCODECOPY ISZERO JUMP 0x21 DUP9 STATICCALL DUP10 ADD SIGNEXTEND 0xC9 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "74:1387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1042:101;;;:::i;:::-;;444:264;536:13;555:10;536:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:17;613:11;:23;625:10;613:23;;;;;;;;;;;;;;;:43;;;;444:264;;:::o;1042:101::-;1402:5;;;;;;;;;;1388:19;;:10;:19;;;1380:28;;;;;;1112:4:::1;1099:10;;:17;;;;;;;;;;;;;;;;;;1127:8;:6;:8::i;:::-;1042:101::o:0;716:286::-;1258:4;1244:18;;:10;;;;;;;;;;;:18;;;1236:27;;;;;;844:6:::1;840:155;860:13;:20;;;;856:1;:24;840:155;;;911:13;925:1;911:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:25;;:56;937:11;:29;949:13;963:1;949:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;937:29;;;;;;;;;;;;;;;;911:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;882:3;;;;;:::i;:::-;;;;840:155;;;;716:286::o:0;7:155:1:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;7:155;;;;:::o;168:139::-;214:5;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;168:139;;;;:::o;313:490::-;389:6;397;446:2;434:9;425:7;421:23;417:32;414:119;;;452:79;;:::i;:::-;414:119;572:1;597:61;650:7;641:6;630:9;626:22;597:61;:::i;:::-;587:71;;543:125;707:2;733:53;778:7;769:6;758:9;754:22;733:53;:::i;:::-;723:63;;678:118;313:490;;;;;:::o;890:104::-;935:7;964:24;982:5;964:24;:::i;:::-;953:35;;890:104;;;:::o;1000:126::-;1037:7;1077:42;1070:5;1066:54;1055:65;;1000:126;;;:::o;1132:77::-;1169:7;1198:5;1187:16;;1132:77;;;:::o;1215:233::-;1254:3;1277:24;1295:5;1277:24;:::i;:::-;1268:33;;1323:66;1316:5;1313:77;1310:103;;;1393:18;;:::i;:::-;1310:103;1440:1;1433:5;1429:13;1422:20;;1215:233;;;:::o;1454:180::-;1502:77;1499:1;1492:88;1599:4;1596:1;1589:15;1623:4;1620:1;1613:15;1640:180;1688:77;1685:1;1678:88;1785:4;1782:1;1775:15;1809:4;1806:1;1799:15;1949:117;2058:1;2055;2048:12;2072:138;2153:32;2179:5;2153:32;:::i;:::-;2146:5;2143:43;2133:71;;2200:1;2197;2190:12;2133:71;2072:138;:::o;2216:122::-;2289:24;2307:5;2289:24;:::i;:::-;2282:5;2279:35;2269:63;;2328:1;2325;2318:12;2269:63;2216:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "231800",
								"executionCost": "70897",
								"totalCost": "302697"
							},
							"external": {
								"addHeir(address,uint256)": "71389",
								"hasDeceased()": "infinite"
							},
							"internal": {
								"payout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 280,
									"end": 285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 280,
									"end": 298,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 280,
									"end": 298,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 280,
									"end": 298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 298,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 351,
									"end": 360,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 360,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 341,
									"end": 360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 360,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 419,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 406,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 406,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1461,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204af918c10557ff5ed7af67ca6dcdf854f4c2241aa23c15562188fa89010bc9ff64736f6c63430008070033",
									".code": [
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "9CDD47F2"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "EDDCCA99"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 639,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 636,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 613,
											"end": 656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 656,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 708,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1380,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1127,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1127,
											"end": 1135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1127,
											"end": 1135,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1127,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 716,
											"end": 1002,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 716,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 840,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 873,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 880,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 840,
											"end": 995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 840,
											"end": 995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 911,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 925,
											"end": 926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 911,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 911,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 911,
											"end": 936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 949,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 911,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 882,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 882,
											"end": 885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 882,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 840,
											"end": 995,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 840,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 1002,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 259,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 421,
											"end": 444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 417,
											"end": 449,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 626,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 754,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 890,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 953,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1390,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1454,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1454,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1640,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2066,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1949,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2314,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addHeir(address,uint256)": "9cdd47f2",
							"hasDeceased()": "eddcca99"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"heirWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inheritanceAmount\",\"type\":\"uint256\"}],\"name\":\"addHeir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDeceased\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Will.sol\":\"Will\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Will.sol\":{\"keccak256\":\"0xc1fc4d1c974131bbc6aa09ba8840f9b3fc3328d67fd23c4cb6e306c280294e70\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd34081b3dc672a229d7c4b832028ec8b0a76a22a234b7ca746014deeeea5ea4\",\"dweb:/ipfs/QmcpJdH497cpr88dZ2jh8rMaybaqp7visBqpDd6oV6A2x5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/1_Will.sol:Will",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/1_Will.sol:Will",
								"label": "fortune",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/1_Will.sol:Will",
								"label": "isDeceased",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 10,
								"contract": "contracts/1_Will.sol:Will",
								"label": "familyWallets",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address_payable)dyn_storage"
							},
							{
								"astId": 14,
								"contract": "contracts/1_Will.sol:Will",
								"label": "inheritance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address_payable)dyn_storage": {
								"base": "t_address_payable",
								"encoding": "dynamic_array",
								"label": "address payable[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/1_Will.sol": {
				"ast": {
					"absolutePath": "contracts/1_Will.sol",
					"exportedSymbols": {
						"Will": [
							117
						]
					},
					"id": 118,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "Will",
							"nameLocation": "83:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "105:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 117,
									"src": "97:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "97:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "fortune",
									"nameLocation": "122:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 117,
									"src": "117:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "117:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "isDeceased",
									"nameLocation": "141:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 117,
									"src": "136:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "136:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "familyWallets",
									"nameLocation": "176:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 117,
									"src": "158:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
										"typeString": "address payable[]"
									},
									"typeName": {
										"baseType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "158:15:0",
											"stateMutability": "payable",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"id": 9,
										"nodeType": "ArrayTypeName",
										"src": "158:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
											"typeString": "address payable[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "inheritance",
									"nameLocation": "221:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 117,
									"src": "196:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 13,
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "204:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "196:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 12,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "215:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "269:163:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "280:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 18,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "288:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "280:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "280:18:0"
											},
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "fortune",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 23,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "351:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "351:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "341:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "341:19:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "isDeceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "406:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "419:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "406:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "406:18:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:0:0"
									},
									"scope": 117,
									"src": "241:191:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "525:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 42,
															"name": "heirWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "555:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 39,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "536:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "536:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
															"typeString": "function (address payable[] storage pointer,address payable)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "536:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "536:30:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 45,
															"name": "inheritance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "613:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"id": 46,
															"name": "heirWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "625:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "613:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "inheritanceAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "639:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "613:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "613:43:0"
											}
										]
									},
									"functionSelector": "9cdd47f2",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addHeir",
									"nameLocation": "453:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "heirWallet",
												"nameLocation": "477:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "461:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "inheritanceAmount",
												"nameLocation": "494:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "489:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:52:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:0"
									},
									"scope": 117,
									"src": "444:264:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "762:240:0",
										"statements": [
											{
												"body": {
													"id": 79,
													"nodeType": "Block",
													"src": "896:99:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 72,
																			"name": "inheritance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "937:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 76,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 73,
																				"name": "familyWallets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "949:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																					"typeString": "address payable[] storage ref"
																				}
																			},
																			"id": 75,
																			"indexExpression": {
																				"id": 74,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "963:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "949:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "937:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 68,
																			"name": "familyWallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "911:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																				"typeString": "address payable[] storage ref"
																			}
																		},
																		"id": 70,
																		"indexExpression": {
																			"id": 69,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "925:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "911:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "911:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "911:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 78,
															"nodeType": "ExpressionStatement",
															"src": "911:56:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "856:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 62,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "860:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "860:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "856:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 80,
												"initializationExpression": {
													"assignments": [
														58
													],
													"declarations": [
														{
															"constant": false,
															"id": 58,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "849:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 80,
															"src": "844:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 57,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 60,
													"initialValue": {
														"hexValue": "30",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "853:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "844:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "882:3:0",
														"subExpression": {
															"id": 65,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "882:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 67,
													"nodeType": "ExpressionStatement",
													"src": "882:3:0"
												},
												"nodeType": "ForStatement",
												"src": "840:155:0"
											}
										]
									},
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 55,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 54,
												"name": "mustBeDeceased",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 105,
												"src": "742:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "742:14:0"
										}
									],
									"name": "payout",
									"nameLocation": "725:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:0:0"
									},
									"scope": 117,
									"src": "716:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1088:55:0",
										"statements": [
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "isDeceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1099:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1112:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1099:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1099:17:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 91,
														"name": "payout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1127:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1127:8:0"
											}
										]
									},
									"functionSelector": "eddcca99",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 85,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 84,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "1072:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1072:9:0"
										}
									],
									"name": "hasDeceased",
									"nameLocation": "1051:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1062:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:0"
									},
									"scope": 117,
									"src": "1042:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1225:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "isDeceased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1244:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1258:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1244:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1236:27:0"
											},
											{
												"id": 103,
												"nodeType": "PlaceholderStatement",
												"src": "1274:1:0"
											}
										]
									},
									"id": 105,
									"name": "mustBeDeceased",
									"nameLocation": "1210:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:0:0"
									},
									"src": "1201:82:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1369:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1388:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1388:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 110,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1388:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1380:28:0"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "1419:1:0"
											}
										]
									},
									"id": 116,
									"name": "onlyOwner",
									"nameLocation": "1359:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:0:0"
									},
									"src": "1350:78:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 118,
							"src": "74:1387:0",
							"usedErrors": []
						}
					],
					"src": "39:1422:0"
				},
				"id": 0
			}
		}
	}
}