{
	"id": "fdebe0f7a29a7401d8a14dd8553932bd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Will.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0;\r\n\r\ncontract Will \r\n{\r\n    address owner;\r\n    uint fortune;\r\n    bool isDeceased;\r\n\r\n    //payable: allow this function to send and receive ether\r\n    constructor() public payable \r\n    {\r\n        owner = msg.sender; //msg sender represents address that is being called\r\n        fortune = msg.value; //msg value telle=s us how much ether is being sent\r\n        isDeceased = false; //when contract is initialized, grandfather is not dead yet\r\n    }\r\n\r\n    //create modifier so the only person who can call the contract is the owner\r\n    modifier onlyOwner \r\n    {\r\n        require(msg.sender == owner);\r\n        _; //shift back to the actual function\r\n    }\r\n\r\n    modifier mustBeDeceased \r\n    {\r\n        require(isDeceased == true);\r\n        _; \r\n    }\r\n\r\n    //list of family wallets\r\n    address payable[] familyWallets;\r\n\r\n    //map through inheritance - create dictionnary key store value\r\n    mapping(address => uint) inheritance;\r\n\r\n    //set inheritance for each address\r\n    function setInheritance(address payable wallet, uint amount) public\r\n    {\r\n        familyWallets.push(wallet); //add wallets to the family wallets\r\n        inheritance[wallet] = amount; //add the inheritance amount for the wallet\r\n    }\r\n\r\n\r\n    //pay each family member based on their wallet address\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/1_Will.sol": {
				"Will": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "wallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setInheritance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_Will.sol\":67:1358  contract Will \r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/1_Will.sol\":269:279  msg.sender */\n  caller\n    /* \"contracts/1_Will.sol\":261:266  owner */\n  0x00\n  dup1\n    /* \"contracts/1_Will.sol\":261:279  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_Will.sol\":353:362  msg.value */\n  callvalue\n    /* \"contracts/1_Will.sol\":343:350  fortune */\n  0x01\n    /* \"contracts/1_Will.sol\":343:362  fortune = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_Will.sol\":438:443  false */\n  0x00\n    /* \"contracts/1_Will.sol\":425:435  isDeceased */\n  0x02\n  0x00\n    /* \"contracts/1_Will.sol\":425:443  isDeceased = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_Will.sol\":67:1358  contract Will \r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_Will.sol\":67:1358  contract Will \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88d51594\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1_Will.sol\":1048:1285  function setInheritance(address payable wallet, uint amount) public\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"contracts/1_Will.sol\":1132:1145  familyWallets */\n      0x03\n        /* \"contracts/1_Will.sol\":1151:1157  wallet */\n      dup3\n        /* \"contracts/1_Will.sol\":1132:1158  familyWallets.push(wallet) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Will.sol\":1227:1233  amount */\n      dup1\n        /* \"contracts/1_Will.sol\":1205:1216  inheritance */\n      0x04\n        /* \"contracts/1_Will.sol\":1205:1224  inheritance[wallet] */\n      0x00\n        /* \"contracts/1_Will.sol\":1217:1223  wallet */\n      dup5\n        /* \"contracts/1_Will.sol\":1205:1224  inheritance[wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_Will.sol\":1205:1233  inheritance[wallet] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Will.sol\":1048:1285  function setInheritance(address payable wallet, uint amount) public\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_11:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_13\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":7:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:307   */\n    tag_15:\n        /* \"#utility.yul\":214:219   */\n      0x00\n        /* \"#utility.yul\":252:258   */\n      dup2\n        /* \"#utility.yul\":239:259   */\n      calldataload\n        /* \"#utility.yul\":230:259   */\n      swap1\n      pop\n        /* \"#utility.yul\":268:301   */\n      tag_17\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":268:301   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":168:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:803   */\n    tag_6:\n        /* \"#utility.yul\":389:395   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup1\n        /* \"#utility.yul\":446:448   */\n      0x40\n        /* \"#utility.yul\":434:443   */\n      dup4\n        /* \"#utility.yul\":425:432   */\n      dup6\n        /* \"#utility.yul\":421:444   */\n      sub\n        /* \"#utility.yul\":417:449   */\n      slt\n        /* \"#utility.yul\":414:533   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":452:531   */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":414:533   */\n    tag_20:\n        /* \"#utility.yul\":572:573   */\n      0x00\n        /* \"#utility.yul\":597:658   */\n      tag_23\n        /* \"#utility.yul\":650:657   */\n      dup6\n        /* \"#utility.yul\":641:647   */\n      dup3\n        /* \"#utility.yul\":630:639   */\n      dup7\n        /* \"#utility.yul\":626:648   */\n      add\n        /* \"#utility.yul\":597:658   */\n      tag_11\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":587:658   */\n      swap3\n      pop\n        /* \"#utility.yul\":543:668   */\n      pop\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":733:786   */\n      tag_24\n        /* \"#utility.yul\":778:785   */\n      dup6\n        /* \"#utility.yul\":769:775   */\n      dup3\n        /* \"#utility.yul\":758:767   */\n      dup7\n        /* \"#utility.yul\":754:776   */\n      add\n        /* \"#utility.yul\":733:786   */\n      tag_15\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":723:786   */\n      swap2\n      pop\n        /* \"#utility.yul\":678:796   */\n      pop\n        /* \"#utility.yul\":313:803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:994   */\n    tag_27:\n        /* \"#utility.yul\":935:942   */\n      0x00\n        /* \"#utility.yul\":964:988   */\n      tag_29\n        /* \"#utility.yul\":982:987   */\n      dup3\n        /* \"#utility.yul\":964:988   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":953:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":890:994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1126   */\n    tag_30:\n        /* \"#utility.yul\":1037:1044   */\n      0x00\n        /* \"#utility.yul\":1077:1119   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1070:1075   */\n      dup3\n        /* \"#utility.yul\":1066:1120   */\n      and\n        /* \"#utility.yul\":1055:1120   */\n      swap1\n      pop\n        /* \"#utility.yul\":1000:1126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1209   */\n    tag_32:\n        /* \"#utility.yul\":1169:1176   */\n      0x00\n        /* \"#utility.yul\":1198:1203   */\n      dup2\n        /* \"#utility.yul\":1187:1203   */\n      swap1\n      pop\n        /* \"#utility.yul\":1132:1209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1338:1455   */\n    tag_22:\n        /* \"#utility.yul\":1447:1448   */\n      0x00\n        /* \"#utility.yul\":1444:1445   */\n      dup1\n        /* \"#utility.yul\":1437:1449   */\n      revert\n        /* \"#utility.yul\":1461:1599   */\n    tag_14:\n        /* \"#utility.yul\":1542:1574   */\n      tag_38\n        /* \"#utility.yul\":1568:1573   */\n      dup2\n        /* \"#utility.yul\":1542:1574   */\n      tag_27\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1535:1540   */\n      dup2\n        /* \"#utility.yul\":1532:1575   */\n      eq\n        /* \"#utility.yul\":1522:1593   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1522:1593   */\n    tag_39:\n        /* \"#utility.yul\":1461:1599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1605:1727   */\n    tag_18:\n        /* \"#utility.yul\":1678:1702   */\n      tag_41\n        /* \"#utility.yul\":1696:1701   */\n      dup2\n        /* \"#utility.yul\":1678:1702   */\n      tag_32\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1671:1676   */\n      dup2\n        /* \"#utility.yul\":1668:1703   */\n      eq\n        /* \"#utility.yul\":1658:1721   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1714:1715   */\n      dup1\n        /* \"#utility.yul\":1707:1719   */\n      revert\n        /* \"#utility.yul\":1658:1721   */\n    tag_42:\n        /* \"#utility.yul\":1605:1727   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fbaae482143e0ced5a65cda6570c7c424d27840a9010fa13a49761cf9c072d8b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600260006101000a81548160ff021916908315150217905550610206806100756000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806388d5159414610030575b600080fd5b61004a60048036038101906100459190610121565b61004c565b005b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081359050610106816101a2565b92915050565b60008135905061011b816101b9565b92915050565b600080604083850312156101385761013761019d565b5b6000610146858286016100f7565b92505060206101578582860161010c565b9150509250929050565b600061016c82610173565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101ab81610161565b81146101b657600080fd5b50565b6101c281610193565b81146101cd57600080fd5b5056fea2646970667358221220fbaae482143e0ced5a65cda6570c7c424d27840a9010fa13a49761cf9c072d8b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x206 DUP1 PUSH2 0x75 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88D51594 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x106 DUP2 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B DUP2 PUSH2 0x1B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0x19D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146 DUP6 DUP3 DUP7 ADD PUSH2 0xF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x157 DUP6 DUP3 DUP7 ADD PUSH2 0x10C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C DUP3 PUSH2 0x173 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x161 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C2 DUP2 PUSH2 0x193 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xAA 0xE4 DUP3 EQ RETURNDATACOPY 0xC 0xED GAS PUSH6 0xCDA6570C7C42 0x4D 0x27 DUP5 EXP SWAP1 LT STATICCALL SGT LOG4 SWAP8 PUSH2 0xCF9C SMOD 0x2D DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "67:1291:0:-:0;;;269:10;261:5;;:18;;;;;;;;;;;;;;;;;;353:9;343:7;:19;;;;438:5;425:10;;:18;;;;;;;;;;;;;;;;;;67:1291;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@setInheritance_73": {
									"entryPoint": 76,
									"id": 73,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1730:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "230:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "239:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "230:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "268:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "268:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "214:5:1",
														"type": ""
													}
												],
												"src": "168:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:399:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "452:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:32:1"
															},
															"nodeType": "YulIf",
															"src": "414:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "543:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "558:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "587:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "630:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "641:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "626:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "626:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "650:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "597:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "587:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "678:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "693:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "697:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "723:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "758:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "778:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "733:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "723:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "397:6:1",
														"type": ""
													}
												],
												"src": "313:490:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "859:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "875:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "869:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "842:6:1",
														"type": ""
													}
												],
												"src": "809:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "953:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "982:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "964:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "953:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "925:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "935:7:1",
														"type": ""
													}
												],
												"src": "890:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1055:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1070:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1055:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1027:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"src": "1000:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1187:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1198:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1187:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1159:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1169:7:1",
														"type": ""
													}
												],
												"src": "1132:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1304:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1321:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1314:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1314:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1215:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1427:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1444:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1447:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1437:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1338:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1535:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1568:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1542:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1542:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1532:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:51:1"
															},
															"nodeType": "YulIf",
															"src": "1522:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1505:5:1",
														"type": ""
													}
												],
												"src": "1461:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1648:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1705:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1714:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1707:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1707:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1671:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1696:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1678:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1678:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1668:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:43:1"
															},
															"nodeType": "YulIf",
															"src": "1658:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1641:5:1",
														"type": ""
													}
												],
												"src": "1605:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806388d5159414610030575b600080fd5b61004a60048036038101906100459190610121565b61004c565b005b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081359050610106816101a2565b92915050565b60008135905061011b816101b9565b92915050565b600080604083850312156101385761013761019d565b5b6000610146858286016100f7565b92505060206101578582860161010c565b9150509250929050565b600061016c82610173565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101ab81610161565b81146101b657600080fd5b50565b6101c281610193565b81146101cd57600080fd5b5056fea2646970667358221220fbaae482143e0ced5a65cda6570c7c424d27840a9010fa13a49761cf9c072d8b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88D51594 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x106 DUP2 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B DUP2 PUSH2 0x1B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0x19D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146 DUP6 DUP3 DUP7 ADD PUSH2 0xF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x157 DUP6 DUP3 DUP7 ADD PUSH2 0x10C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C DUP3 PUSH2 0x173 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x161 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C2 DUP2 PUSH2 0x193 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xAA 0xE4 DUP3 EQ RETURNDATACOPY 0xC 0xED GAS PUSH6 0xCDA6570C7C42 0x4D 0x27 DUP5 EXP SWAP1 LT STATICCALL SGT LOG4 SWAP8 PUSH2 0xCF9C SMOD 0x2D DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "67:1291:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1048:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1132:13;1151:6;1132:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1227:6;1205:11;:19;1217:6;1205:19;;;;;;;;;;;;;;;:28;;;;1048:237;;:::o;7:155:1:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;7:155;;;;:::o;168:139::-;214:5;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;168:139;;;;:::o;313:490::-;389:6;397;446:2;434:9;425:7;421:23;417:32;414:119;;;452:79;;:::i;:::-;414:119;572:1;597:61;650:7;641:6;630:9;626:22;597:61;:::i;:::-;587:71;;543:125;707:2;733:53;778:7;769:6;758:9;754:22;733:53;:::i;:::-;723:63;;678:118;313:490;;;;;:::o;890:104::-;935:7;964:24;982:5;964:24;:::i;:::-;953:35;;890:104;;;:::o;1000:126::-;1037:7;1077:42;1070:5;1066:54;1055:65;;1000:126;;;:::o;1132:77::-;1169:7;1198:5;1187:16;;1132:77;;;:::o;1338:117::-;1447:1;1444;1437:12;1461:138;1542:32;1568:5;1542:32;:::i;:::-;1535:5;1532:43;1522:71;;1589:1;1586;1579:12;1522:71;1461:138;:::o;1605:122::-;1678:24;1696:5;1678:24;:::i;:::-;1671:5;1668:35;1658:63;;1717:1;1714;1707:12;1658:63;1605:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "103600",
								"executionCost": "70775",
								"totalCost": "174375"
							},
							"external": {
								"setInheritance(address,uint256)": "71389"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 1358,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 279,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 261,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 266,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 353,
									"end": 362,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 362,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 343,
									"end": 362,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 362,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 362,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 438,
									"end": 443,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 435,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 443,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 425,
									"end": 443,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 425,
									"end": 443,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 425,
									"end": 443,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1358,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbaae482143e0ced5a65cda6570c7c424d27840a9010fa13a49761cf9c072d8b64736f6c63430008070033",
									".code": [
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "88D51594"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 1358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1233,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1285,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 259,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 421,
											"end": 444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 417,
											"end": 449,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 626,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 754,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 890,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 953,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1338,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1338,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1461,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1575,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1522,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1522,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1599,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1605,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1658,
											"end": 1721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1658,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"setInheritance(address,uint256)": "88d51594"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setInheritance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Will.sol\":\"Will\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Will.sol\":{\"keccak256\":\"0x828e4a16be904020bad3d826537bf93cd70d0f6dd1c29bde0005240d9d579bf5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a22b069c73c3cb0c19db72359190894954e7232a77335a21221572f51597a1ac\",\"dweb:/ipfs/QmPcoKWD6h4Ln5pViQnQu4XURFiEeqZKj7hSMJ6uP88SWi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/1_Will.sol:Will",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/1_Will.sol:Will",
								"label": "fortune",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/1_Will.sol:Will",
								"label": "isDeceased",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 49,
								"contract": "contracts/1_Will.sol:Will",
								"label": "familyWallets",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address_payable)dyn_storage"
							},
							{
								"astId": 53,
								"contract": "contracts/1_Will.sol:Will",
								"label": "inheritance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address_payable)dyn_storage": {
								"base": "t_address_payable",
								"encoding": "dynamic_array",
								"label": "address payable[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/1_Will.sol:12:5:\n   |\n12 |     constructor() public payable \n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 511,
					"file": "contracts/1_Will.sol",
					"start": 215
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/1_Will.sol": {
				"ast": {
					"absolutePath": "contracts/1_Will.sol",
					"exportedSymbols": {
						"Will": [
							74
						]
					},
					"id": 75,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 74,
							"linearizedBaseContracts": [
								74
							],
							"name": "Will",
							"nameLocation": "76:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "98:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "90:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "90:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "fortune",
									"nameLocation": "115:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "110:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "110:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "isDeceased",
									"nameLocation": "134:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "129:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "129:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "250:261:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "261:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "269:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "269:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "261:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "261:18:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "fortune",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "353:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "353:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "343:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "343:19:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "isDeceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "438:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "425:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "425:18:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:0:0"
									},
									"scope": 74,
									"src": "215:296:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "625:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "644:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "644:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 30,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "658:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "644:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "636:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "636:28:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "675:1:0"
											}
										]
									},
									"id": 36,
									"name": "onlyOwner",
									"nameLocation": "609:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:0:0"
									},
									"src": "600:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "758:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 39,
																"name": "isDeceased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "777:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "791:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "777:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "769:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "769:27:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "807:1:0"
											}
										]
									},
									"id": 46,
									"name": "mustBeDeceased",
									"nameLocation": "737:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:0"
									},
									"src": "728:89:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "familyWallets",
									"nameLocation": "873:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "855:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
										"typeString": "address payable[]"
									},
									"typeName": {
										"baseType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "855:15:0",
											"stateMutability": "payable",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"id": 48,
										"nodeType": "ArrayTypeName",
										"src": "855:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
											"typeString": "address payable[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "inheritance",
									"nameLocation": "988:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "963:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 52,
										"keyType": {
											"id": 50,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "971:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "963:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 51,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "982:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1121:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 63,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 60,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1132:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1132:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
															"typeString": "function (address payable[] storage pointer,address payable)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1132:26:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 66,
															"name": "inheritance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1205:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 68,
														"indexExpression": {
															"id": 67,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1217:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1205:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1205:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1205:28:0"
											}
										]
									},
									"functionSelector": "88d51594",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInheritance",
									"nameLocation": "1057:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "1088:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1072:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1101:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1096:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:37:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1121:0:0"
									},
									"scope": 74,
									"src": "1048:237:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 75,
							"src": "67:1291:0",
							"usedErrors": []
						}
					],
					"src": "39:1319:0"
				},
				"id": 0
			}
		}
	}
}